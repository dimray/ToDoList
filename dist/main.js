(()=>{const e=document.querySelector("#add-item-form"),t=document.querySelector(".list-display"),o=document.querySelector(".add-item-btn");let d,s,a;function n(){d=document.querySelector(".category").textContent;const e=JSON.parse(localStorage.getItem("todoList"))[0];t.innerHTML="",Object.keys(e).forEach(((o,s)=>{if(o===d)for(const o in e[d]){const s=document.createElement("label");s.classList.add("listItem");const a=document.createElement("label");a.classList.add("listItem");const n=document.createElement("div");n.classList.add("listDisplayDiv");const l=document.createElement("button");l.classList.add("completed-btn"),l.classList.add("listItem"),l.classList.add("listBtn"),l.innerText="delete",s.textContent=o,a.textContent=e[d][o],n.appendChild(s),n.appendChild(a),n.appendChild(l),t.appendChild(n)}}))}document.addEventListener("DOMContentLoaded",(()=>{s=JSON.parse(localStorage.getItem("todoList")),s?(a=s[0],n()):s=[]})),document.addEventListener("click",(l=>{var c;l.target===o&&(t.classList.add("hidden"),o.classList.add("hidden"),e.classList.remove("hidden")),l.target.className.includes("form-submit-btn")&&(e.classList.add("hidden"),t.classList.remove("hidden"),o.classList.remove("hidden"),function(){d=document.querySelector(".category").textContent;const t=e.elements.todoitem.value,o=e.elements.duedate.value;null===localStorage.getItem("todoList")?(a={},a[d]={},a[d][t]=o):(s=JSON.parse(localStorage.getItem("todoList")),a=s[0],void 0===a[d]?(a[d]={},a[d][t]=o):a[d][t]=o),s=[],s.push(a),localStorage.removeItem("todoList"),localStorage.setItem("todoList",JSON.stringify(s))}(),n()),l.target.className.includes("completed-btn")&&(c=l.target.parentNode.querySelector(".listItem").textContent,d=document.querySelector(".category").textContent,delete s[0][d][c],localStorage.removeItem("todoList"),localStorage.setItem("todoList",JSON.stringify(s)),l.target.parentNode.remove())}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,